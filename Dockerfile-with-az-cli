FROM node:22-alpine AS builder

WORKDIR /app

COPY src /app/src
COPY tsconfig.json /app/tsconfig.json
COPY package.json /app/package.json
COPY package-lock.json /app/package-lock.json

RUN --mount=type=cache,target=/root/.npm npm install
RUN --mount=type=cache,target=/root/.npm-production npm ci --ignore-scripts --omit-dev

FROM node:22-alpine AS release

WORKDIR /app

COPY --from=builder /app/dist /app/dist
COPY --from=builder /app/package.json /app/package.json
COPY --from=builder /app/package-lock.json /app/package-lock.json

ENV NODE_ENV=production

RUN npm ci --ignore-scripts --omit-dev

# Install Azure DevOps CLI in the release stage
# See https://github.com/Azure/azure-cli/issues/19591 for details on how to install on Alpine Linux
RUN apk add py3-pip
# Need to use pipx since the environment is externally managed
RUN apk add pipx
RUN apk add gcc musl-dev python3-dev libffi-dev openssl-dev cargo make
RUN pipx install azure-cli
# Add installation dir for stuff installed from pipx to PATH
ENV PATH=/root/.local/bin:$PATH

# Install devops extension
RUN az extension add --upgrade -n azure-devops

# Install keyring dependencies for secure PAT storage?
# RUN echo "" | az devops login --organization https://dev.azure.com/mattermathik
# ENV AZURE_DEVOPS_EXT_PAT=""

ENTRYPOINT ["node", "/app/dist/index.js", "mattermathik", "azurecli"]